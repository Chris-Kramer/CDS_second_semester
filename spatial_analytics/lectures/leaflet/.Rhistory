activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(55.974671906471514, 8.798270034977644, zoom = 10)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmakr %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(55.974671906471514, 8.798270034977644, zoom = 10)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(55.61647080681132, 10.017752357806076, zoom = 10)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(55.61647080681132, 10.017752357806076, zoom = 9)
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(55.61647080681132, 11, zoom = 9)
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(55.61647080681132, 11, zoom = 9)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(55.59391306028864, 10.102452156082576, zoom = 9)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(50, 10.102452156082576, zoom = 9)
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(50, 10.102452156082576, zoom = 9)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(55.596074141081544, 10.069979231033917, zoom = 9)
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(55.596074141081544, 10.069979231033917, zoom = 9)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(11, 56, zoom = 9)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(11, 56, zoom = 7)
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(11, 56, zoom = 7)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(11, 56, zoom = 7)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
# Task 2: Read in the googlesheet data you and your colleagues populated with data.
library(googlesheets4)
install.packages("googlesheets4")
places <- read_sheet)("https://docs.google.com/spreadsheets/d/1PlxsPElZML8LZKyXbqdAYeQCDIvDps2McZx1cTVWSzI/edit#gid=0")
places <- read_sheet("https://docs.google.com/spreadsheets/d/1PlxsPElZML8LZKyXbqdAYeQCDIvDps2McZx1cTVWSzI/edit#gid=0")
# Task 2: Read in the googlesheet data you and your colleagues populated with data.
library(googlesheets4)
places <- read_sheet("https://docs.google.com/spreadsheets/d/1PlxsPElZML8LZKyXbqdAYeQCDIvDps2McZx1cTVWSzI/edit#gid=0")
glimpse(places)
glimpse(places)
# Task 2: Read in the googlesheet data you and your colleagues populated with data.
library(googlesheets4)
glimpse(places)
places <- read_sheet("https://docs.google.com/spreadsheets/d/1PlxsPElZML8LZKyXbqdAYeQCDIvDps2McZx1cTVWSzI/edit#gid=0")
glimpse(places)
glimpse(places)
# Task 2: Read in the googlesheet data you and your colleagues populated with data.
library(googlesheets4)
glimpse(places)
places <- places %>% filter(!is.na(Longitude))# The googlesheet is at https://docs.google.com/spreadsheets/d/1PlxsPElZML8LZKyXbqdAYeQCDIvDps2McZx1cTVWSzI/edit#gid=0
# Task 2: Read in the googlesheet data you and your colleagues populated with data.
library(googlesheets4)
ibrary(leaflet)
library(htmltools)
library(htmlwidgets)
library(tidyverse)
# Task 2: Read in the googlesheet data you and your colleagues populated with data.
library(googlesheets4)
install.packages("googlesheets")
# Task 2: Read in the googlesheet data you and your colleagues populated with data.
library(googlesheets)
# Task 2: Read in the googlesheet data you and your colleagues populated with data.
library(googlesheets)
#install.packages("googlesheets")
places <- read_sheet("https://docs.google.com/spreadsheets/d/1PlxsPElZML8LZKyXbqdAYeQCDIvDps2McZx1cTVWSzI/edit#gid=0")
glimpse(places)
places <- places %>% filter(!is.na(Longitude))
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(11, 56, zoom = 7)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(tidyverse)
l_aus <- leaflet() %>%   # assign the base location to an object
setView(151.2339084, -33.85089, zoom = 13)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_aus <- l_aus %>% addProviderTiles(provider, group = provider)
}
AUSmap <- l_aus %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
l_denmark <- leaflet() %>%   # assign the base location to an object
setView(11, 56, zoom = 7)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
l_denmark <- l_denmark %>% addProviderTiles(provider, group = provider)
}
danish_map <- l_denmark %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
danish_map
danish_map %>%
addCircleMarkers(lng = places$Longitude,
lat = places$Latitude,
popup = places$Description)
danish_map %>%
addAwesomeMarkers(lng = places$Longitude,
lat = places$Latitude,
popup = places$Description)
danish_map %>%
addAwesomeMarkers(lng = places$Longitude,
lat = places$Latitude,
popup = places$Description,
clusterOptions = markerClusterOptions())
danish_map %>%
addCircleMarkers(lng = places$Longitude,
lat = places$Latitude,
popup = places$Description,
clusterOptions = markerClusterOptions())
leaflet.providers::get_providers()
